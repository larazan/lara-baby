menu header X
swiper
home page
nama lengkap 
scrape activity
breadcrumb X
detail pregnant week
toc X
calculator tool
parenting page
put cache
put locale X
optimazing
name & logo
language
generator




This Blade file (`resources/views/babyname/generate.blade.php`) will contain the HTML structure, Tailwind CSS for styling, and the Alpine.js logic to randomly select two names and combine them.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generate Full Name</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Alpine.js CDN -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <!-- Google Font: Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Apply Inter font to the body */
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">
    <!-- Main container for the name generator, powered by Alpine.js -->
    <div x-data="nameGenerator({{ json_encode($names) }})" class="bg-white p-8 rounded-lg shadow-xl max-w-md w-full text-center">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">Full Name Generator</h1>

        <div class="mb-8">
            <p class="text-gray-600 text-lg mb-2">Generated Full Name:</p>
            <!-- Display the generated full name -->
            <p x-text="fullName" class="text-5xl font-extrabold text-indigo-600 break-words"></p>
            <!-- Placeholder text if no name has been generated yet -->
            <template x-if="!fullName">
                <p class="text-gray-400 text-xl mt-2">Click "Generate" to create a name!</p>
            </template>
        </div>

        <!-- Button to trigger name generation -->
        <button @click="generateFullName()"
                class="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transform transition duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
            Generate New Full Name
        </button>

        <!-- Display error message if any -->
        <template x-if="errorMessage">
            <p x-text="errorMessage" class="text-red-500 mt-4 text-sm"></p>
        </template>
    </div>

    <script>
        /**
         * Alpine.js data and methods for the full name generator.
         * @param {Array<string>} initialNames - An array of single names fetched from the database.
         */
        function nameGenerator(initialNames) {
            return {
                names: initialNames, // Stores the array of names
                fullName: '',        // Stores the generated full name
                errorMessage: '',    // Stores any error messages

                /**
                 * Initializes the component.
                 * Calls generateFullName() on component load to show an initial name.
                 */
                init() {
                    this.generateFullName();
                },

                /**
                 * Generates a new full name by combining two random names from the list.
                 */
                generateFullName() {
                    this.errorMessage = ''; // Clear any previous error messages

                    // Check if there are enough names to generate a full name
                    if (this.names.length < 2) {
                        this.errorMessage = 'Not enough names available to generate a full name. Please add more names to the database.';
                        this.fullName = 'N/A'; // Display N/A if generation is not possible
                        return; // Exit the function
                    }

                    // Select a random index for the first name
                    let firstNameIndex = Math.floor(Math.random() * this.names.length);
                    let lastNameIndex;

                    // Select a random index for the last name, ensuring it's different from the first name's index
                    // This loop continues until a distinct last name index is found
                    do {
                        lastNameIndex = Math.floor(Math.random() * this.names.length);
                    } while (this.names.length > 1 && lastNameIndex === firstNameIndex); // Only loop if there's more than one name

                    // Get the actual names using the selected indices
                    const firstName = this.names[firstNameIndex];
                    const lastName = this.names[lastNameIndex];

                    // Combine them to form the full name
                    this.fullName = `${firstName} ${lastName}`;
                }
            }
        }
    </script>
</body>
</html>
```