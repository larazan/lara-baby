<?php

namespace App\Http\Livewire;

use App\Models\Article;
use Livewire\Component;

class ArticleIndex extends Component
{
    public $search = '';
    public $sortField = 'id';
    public $sortDirection = 'asc';

    // Properties to control the modal
    public $showArticleModal = false;
    public $articleSlugToEdit = null; // Use slug for editing

    // Listeners for events from the modal component
    protected $listeners = [
        'articleSaved' => 'handleArticleSaved',
        'closeArticleModal' => 'closeModal',
        'articleDeleted' => '$refresh' // Keep existing listener for delete
    ];

    public function sortBy($field)
    {
        if ($this->sortField === $field) {
            $this->sortDirection = $this->sortDirection === 'asc' ? 'desc' : 'asc';
        } else {
            $this->sortDirection = 'asc';
        }
        $this->sortField = $field;
    }

    public function deleteArticle($id)
    {
        $article = Article::find($id);
        if ($article) {
            $article->delete();
            session()->flash('success', 'Article deleted successfully.');
            $this->emit('articleDeleted');
        }
    }

    public function openCreateModal()
    {
        $this->articleSlugToEdit = null; // Ensure no article is being edited
        $this->showArticleModal = true;
    }

    public function openEditModal($slug)
    {
        $this->articleSlugToEdit = $slug;
        $this->showArticleModal = true;
    }

    public function closeModal()
    {
        $this->showArticleModal = false;
        $this->articleSlugToEdit = null; // Clear edit state
    }

    public function handleArticleSaved()
    {
        $this->closeModal();
        session()->flash('success', 'Article saved successfully.');
        $this->dispatch('$refresh'); // Refresh the article list
    }

    public function render()
    {
        $articles = Article::with('category')
            ->when($this->search, function ($query) {
                $locale = app()->getLocale();
                $query->where("title->{$locale}", 'like', '%' . $this->search . '%')
                      ->orWhereHas('category', function ($q) use ($locale) {
                          $q->where("name->{$locale}", 'like', '%' . $this->search . '%');
                      });
            })
            ->orderBy($this->sortField, $this->sortDirection)
            ->get();

        return view('livewire.article-index', [
            'articles' => $articles,
            'currentLocale' => app()->getLocale(),
        ]);
    }
}
